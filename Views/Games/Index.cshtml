@using GameReview.Helpers
@model PaginatedList<GameReview.Models.Game>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Games</h1>

<p>
    <a asp-action="Create">Add New Game</a>
</p>

<form method="get" class="form-inline mb-3">
    <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control mr-2" placeholder="Search by title" />
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table table-striped table-bordered mt-4">
    <thead class="thead-light">
        <tr>
            <th class="text-light">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">Title</a>
            </th>
            <th class="text-light">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Release Date</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td class="text-light">
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td class="text-light">
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.GameId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.GameId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.GameId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="text-center">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]">Previous</a>
    }
    Page @Model.PageIndex of @Model.TotalPages
    @if (Model.HasNextPage)
    {
        <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-searchString="@ViewData["CurrentFilter"]">Next</a>
    }
</div>
